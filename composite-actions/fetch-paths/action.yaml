name: 'Check Services'

description: 'Checks which services are affected by changes and outputs a matrix.'

outputs:
  matrix_services:
    description: 'JSON array of affected services.'
    value: ${{ steps.set_matrix.outputs.matrix_services }}

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Install jq
      uses: dcarbone/install-jq-action@v3.0.1

    - name: Get changed directories and set matrix
      id: set_matrix
      shell: bash
      run: |
        # Get the base and feature branch SHAs
        base_branch=${{ github.event.pull_request.base.sha }}
        feature_branch=${{ github.event.pull_request.head.sha }}
    
        # Get the list of changed directories
        changed_dirs=$(git diff --name-only $base_branch $feature_branch | awk -F'/' '{print $1"/"$2}' | sort -u)
    
        echo "Changed directories: $changed_dirs"
    
        if [[ -z "$changed_dirs" ]]; then
          echo "No changed directories found. Skipping service check."
          echo "matrix_services=[]" >> $GITHUB_OUTPUT
          exit 0
        fi
    
        # Initialize an array to store matched services
        services=()
    
        # Loop through each changed directory and find the corresponding service in config.json
        while read -r changed_dir; do
          # Get services that match the changed directory
          matched_services=$(jq -r --arg dir "$changed_dir" \
            '. | to_entries | map(select(.value.service_source_path | contains($dir))) | .[].key' build/config.json)
          
          # Add matched services to the services array
          if [[ -n "$matched_services" ]]; then
            services+=($matched_services)
          fi
        done <<< "$changed_dirs"
    
        # Remove duplicates and format as a JSON array
        if [[ ${#services[@]} -gt 0 ]]; then
          unique_services=$(echo "${services[@]}" | tr ' ' '\n' | sort -u | jq -R -s 'split("\n") | map(select(. != ""))')
          echo "matrix_services=$unique_services" >> $GITHUB_OUTPUT
        else
          echo "No matching services found in config.json. Skipping service check."
          echo "matrix_services=[]" >> $GITHUB_OUTPUT
        fi
